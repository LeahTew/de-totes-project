name: Test and Deploy
on: [push]
jobs:
  run-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Setup venv
        run: make requirements

      - name: Run Security Checks
        run: make security-test

      - name: Run Flake
        run: make run-flake
      
      - name: Check Coverage
        run: make check-coverage

  setup-test-database:
    runs-on: ubuntu-latest
    # needs: run-checks
    
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Setup venv
        run: make requirements

      - name: Setup postgres
        uses: harmon758/postgresql-action@v1
        with:
          postgresql version: '14'
      
      - name: Start psql
        run: sudo service postgresql start

      - name: Access postgres folder
        run: cd ~postgres/

      - name: Enter psql
        run: sudo -u postgres psql
        
      - name: Create test user
        run: sudo -u  postgres createuser --superuser testuser

      - name: Alter user with password
        run: psql -c "ALTER USER testuser WITH PASSWORD 'password';" 

# 
            #   run: |
      #     
      #     
      #     sudo -u  postgres createdb testuser
      #     


      # - name: Create postgres testuser
      #   run: |
      #     createuser testuser
      #     createdb --owner testuser mydatabase
      #     psql -c "ALTER USER testuser WITH PASSWORD 'password'"
      #   env: 
      #     PGSERVICE: ${{ steps.postgres.outputs.service-name }}
      #     PGHOST: postgres
      #     PGPORT: 5432:5432
      #   shell: bash

      #   run: |
      #     sudo service postgresql start
      #     sudo -u  postgres createuser --superuser testuser
      #     sudo -u  postgres createdb testuser
      #     psql -c "ALTER USER testuser WITH PASSWORD 'password';" 

      # - name: Create .pgpass file
      #   run: |
      #     cd
      #     echo '*:*:*:*:password' > .pgpass

      # - name: Permissions for .pgpass
      #   run: chmod 0600 ~/.pgpass

      # - name: Create test-database
      #   run: psql -U testuser -f ./test_db/test_database.sql
      #   env: 
      #     PGSERVICE: ${{ steps.postgres.outputs.service-name }}
      #     PGHOST: postgres
      #     PGPORT: 5432:5432
      #     PGUSER: testuser
      #     PGPASSWORD: password
      #   shell: bash

      # - name: Seed test-database
      #   run: psql -U testuser -f ./test_db/test_db_inserts.sql

  run-tests:
    runs-on: ubuntu-latest
    needs: setup-test-database
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Setup venv
        run: make requirements

      - name: run-Test
        run: make unit-tests   
 
  deploy: 
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup AWS CLI Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with: 
          aws-region: eu-west-2
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: Terraform
        run: terraform init
      
      - name: Terraform plan
        working-directory: Terraform
        run: terraform plan
 
      - name: Terraform apply
        working-directory: Terraform
        run: terraform apply -auto-approve 
        

